name: Release Tests

on:
  workflow_dispatch:
    inputs:
      test_network:
        description: 'Network to test against'
        required: true
        default: 'DatilDev'
        type: choice
        options:
        - DatilDev
        - DatilTest
        - Datil

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  full_test_suite:
    name: Full Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          lit-rust-sdk/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Run All Tests
      env:
        ETHEREUM_PRIVATE_KEY: ${{ secrets.ETHEREUM_PRIVATE_KEY }}
        PKP_PUBLIC_KEY: ${{ secrets.PKP_PUBLIC_KEY }}
        PKP_TOKEN_ID: ${{ secrets.PKP_TOKEN_ID }}
        PKP_ETH_ADDRESS: ${{ secrets.PKP_ETH_ADDRESS }}
        ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
        LIT_NETWORK: ${{ github.event.inputs.test_network || 'DatilDev' }}
      run: |
        cd lit-rust-sdk
        echo "Running full test suite against $LIT_NETWORK network"
        
        # Run all tests with extended timeout
        cargo test -- --nocapture --test-threads=1
        
    - name: Generate Test Report
      if: always()
      run: |
        cd lit-rust-sdk
        echo "## Test Results" > test_report.md
        echo "- **Network**: ${{ github.event.inputs.test_network || 'DatilDev' }}" >> test_report.md
        echo "- **Date**: $(date)" >> test_report.md
        echo "- **Commit**: ${{ github.sha }}" >> test_report.md
        echo "- **Status**: ${{ job.status }}" >> test_report.md
        
    - name: Upload Test Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-report-${{ github.run_number }}
        path: lit-rust-sdk/test_report.md
        retention-days: 30

  performance_test:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: full_test_suite
    if: success()
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          lit-rust-sdk/target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
          
    - name: Run Performance Benchmarks
      env:
        ETHEREUM_PRIVATE_KEY: ${{ secrets.ETHEREUM_PRIVATE_KEY }}
        ETHEREUM_RPC_URL: ${{ secrets.ETHEREUM_RPC_URL }}
      run: |
        cd lit-rust-sdk
        echo "Running performance tests..."
        
        # Time the local session signature tests
        echo "Testing local session signatures performance..."
        time cargo test test_local_session_sigs_hello_world -- --nocapture
        
        # Test connection performance
        echo "Testing connection performance..."
        time cargo test test_connect_to_lit_network -- --nocapture
        
  notify_results:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [full_test_suite, performance_test]
    if: always()
    
    steps:
    - name: Create Summary
      run: |
        echo "## Release Test Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Full Test Suite**: ${{ needs.full_test_suite.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Performance Tests**: ${{ needs.performance_test.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Network**: ${{ github.event.inputs.test_network || 'DatilDev' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY